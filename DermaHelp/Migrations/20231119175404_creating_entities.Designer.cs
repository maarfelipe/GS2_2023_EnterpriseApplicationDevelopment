// <auto-generated />
using System;
using DermaHelp.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace DermaHelp.Migrations
{
    [DbContext(typeof(OracleDbContext))]
    [Migration("20231119175404_creating_entities")]
    partial class creating_entities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DermaHelp.Entities.Consulta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("id");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ConsultorioId")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("id_consultorio");

                    b.Property<DateTime>("DataHora")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("data_consulta");

                    b.Property<long>("MedicoId")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("id_medico");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_usuario");

                    b.HasKey("Id");

                    b.HasIndex("ConsultorioId");

                    b.HasIndex("MedicoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("DermaHelp.Entities.Consultorio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("id");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("NVARCHAR2(14)")
                        .HasColumnName("cnpj_consultorio");

                    b.Property<long>("EnderecoId")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("id_endereco");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("nome_consultorio");

                    b.HasKey("Id");

                    b.ToTable("Consultorios");
                });

            modelBuilder.Entity("DermaHelp.Entities.Endereco", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("id");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("NVARCHAR2(8)")
                        .HasColumnName("cep");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("cidade");

                    b.Property<string>("Complemento")
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("complemento");

                    b.Property<long?>("ConsultorioId")
                        .IsRequired()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("id_consultorio");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("estado");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("logradouro");

                    b.Property<int>("Numero")
                        .HasMaxLength(5)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("numero");

                    b.HasKey("Id");

                    b.HasIndex("ConsultorioId")
                        .IsUnique();

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("DermaHelp.Entities.Imagem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("id");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataHora")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("data_hora");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("RAW(2000)")
                        .HasColumnName("image_data");

                    b.Property<string>("Resultado")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("resultado_imagem");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_usuario");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Imagens");
                });

            modelBuilder.Entity("DermaHelp.Entities.Medico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("id");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Crm")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("NVARCHAR2(13)")
                        .HasColumnName("crm_medico");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)")
                        .HasColumnName("email_medico");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("nome_medico");

                    b.HasKey("Id");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("DermaHelp.Entities.MedicoConsultorio", b =>
                {
                    b.Property<long?>("MedicoId")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("id_medico");

                    b.Property<long?>("ConsultorioId")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("id_consultorio");

                    b.HasKey("MedicoId", "ConsultorioId");

                    b.HasIndex("ConsultorioId");

                    b.ToTable("MedicosConsultorios");
                });

            modelBuilder.Entity("DermaHelp.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("NVARCHAR2(11)")
                        .HasColumnName("cpf_usuario");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)")
                        .HasColumnName("email_usuario");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("nome_usuario");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR2(60)")
                        .HasColumnName("senha_usuario");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("DermaHelp.Entities.Consulta", b =>
                {
                    b.HasOne("DermaHelp.Entities.Consultorio", "Consultorio")
                        .WithMany("Consultas")
                        .HasForeignKey("ConsultorioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DermaHelp.Entities.Medico", "Medico")
                        .WithMany("Consultas")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DermaHelp.Entities.Usuario", "Usuario")
                        .WithMany("Consultas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consultorio");

                    b.Navigation("Medico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DermaHelp.Entities.Endereco", b =>
                {
                    b.HasOne("DermaHelp.Entities.Consultorio", "Consultorio")
                        .WithOne("Endereco")
                        .HasForeignKey("DermaHelp.Entities.Endereco", "ConsultorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consultorio");
                });

            modelBuilder.Entity("DermaHelp.Entities.Imagem", b =>
                {
                    b.HasOne("DermaHelp.Entities.Usuario", "Usuario")
                        .WithMany("Imagens")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DermaHelp.Entities.MedicoConsultorio", b =>
                {
                    b.HasOne("DermaHelp.Entities.Consultorio", "Consultorio")
                        .WithMany("MedicoConsultorio")
                        .HasForeignKey("ConsultorioId");

                    b.HasOne("DermaHelp.Entities.Medico", "Medico")
                        .WithMany("MedicoConsultorio")
                        .HasForeignKey("MedicoId");

                    b.Navigation("Consultorio");

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("DermaHelp.Entities.Consultorio", b =>
                {
                    b.Navigation("Consultas");

                    b.Navigation("Endereco")
                        .IsRequired();

                    b.Navigation("MedicoConsultorio");
                });

            modelBuilder.Entity("DermaHelp.Entities.Medico", b =>
                {
                    b.Navigation("Consultas");

                    b.Navigation("MedicoConsultorio");
                });

            modelBuilder.Entity("DermaHelp.Entities.Usuario", b =>
                {
                    b.Navigation("Consultas");

                    b.Navigation("Imagens");
                });
#pragma warning restore 612, 618
        }
    }
}
